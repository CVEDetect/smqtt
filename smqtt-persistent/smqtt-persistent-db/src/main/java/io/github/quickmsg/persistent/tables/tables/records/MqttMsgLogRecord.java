/*
 * This file is generated by jOOQ.
 */
package io.github.quickmsg.persistent.tables.tables.records;


import io.github.quickmsg.persistent.tables.tables.MqttMsgLog;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MqttMsgLogRecord extends TableRecordImpl<MqttMsgLogRecord> implements Record7<String, String, String, Integer, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>smqtt.mqtt_msg_log.message_id</code>. 消息ID
     */
    public void setMessageId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.message_id</code>. 消息ID
     */
    public String getMessageId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>smqtt.mqtt_msg_log.clientId</code>. 客户端ID
     */
    public void setClientid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.clientId</code>. 客户端ID
     */
    public String getClientid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>smqtt.mqtt_msg_log.topic</code>. 话题
     */
    public void setTopic(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.topic</code>. 话题
     */
    public String getTopic() {
        return (String) get(2);
    }

    /**
     * Setter for <code>smqtt.mqtt_msg_log.qos</code>. 消息质量
     */
    public void setQos(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.qos</code>. 消息质量
     */
    public Integer getQos() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>smqtt.mqtt_msg_log.retain</code>. 保留标志
     */
    public void setRetain(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.retain</code>. 保留标志
     */
    public Integer getRetain() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>smqtt.mqtt_msg_log.payload</code>. 消息内容
     */
    public void setPayload(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.payload</code>. 消息内容
     */
    public String getPayload() {
        return (String) get(5);
    }

    /**
     * Setter for <code>smqtt.mqtt_msg_log.create_time</code>. 记录保存时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>smqtt.mqtt_msg_log.create_time</code>. 记录保存时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, Integer, Integer, String, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, Integer, Integer, String, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MqttMsgLog.MQTT_MSG_LOG.MESSAGE_ID;
    }

    @Override
    public Field<String> field2() {
        return MqttMsgLog.MQTT_MSG_LOG.CLIENTID;
    }

    @Override
    public Field<String> field3() {
        return MqttMsgLog.MQTT_MSG_LOG.TOPIC;
    }

    @Override
    public Field<Integer> field4() {
        return MqttMsgLog.MQTT_MSG_LOG.QOS;
    }

    @Override
    public Field<Integer> field5() {
        return MqttMsgLog.MQTT_MSG_LOG.RETAIN;
    }

    @Override
    public Field<String> field6() {
        return MqttMsgLog.MQTT_MSG_LOG.PAYLOAD;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return MqttMsgLog.MQTT_MSG_LOG.CREATE_TIME;
    }

    @Override
    public String component1() {
        return getMessageId();
    }

    @Override
    public String component2() {
        return getClientid();
    }

    @Override
    public String component3() {
        return getTopic();
    }

    @Override
    public Integer component4() {
        return getQos();
    }

    @Override
    public Integer component5() {
        return getRetain();
    }

    @Override
    public String component6() {
        return getPayload();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateTime();
    }

    @Override
    public String value1() {
        return getMessageId();
    }

    @Override
    public String value2() {
        return getClientid();
    }

    @Override
    public String value3() {
        return getTopic();
    }

    @Override
    public Integer value4() {
        return getQos();
    }

    @Override
    public Integer value5() {
        return getRetain();
    }

    @Override
    public String value6() {
        return getPayload();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateTime();
    }

    @Override
    public MqttMsgLogRecord value1(String value) {
        setMessageId(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord value2(String value) {
        setClientid(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord value3(String value) {
        setTopic(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord value4(Integer value) {
        setQos(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord value5(Integer value) {
        setRetain(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord value6(String value) {
        setPayload(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord value7(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MqttMsgLogRecord values(String value1, String value2, String value3, Integer value4, Integer value5, String value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MqttMsgLogRecord
     */
    public MqttMsgLogRecord() {
        super(MqttMsgLog.MQTT_MSG_LOG);
    }

    /**
     * Create a detached, initialised MqttMsgLogRecord
     */
    public MqttMsgLogRecord(String messageId, String clientid, String topic, Integer qos, Integer retain, String payload, LocalDateTime createTime) {
        super(MqttMsgLog.MQTT_MSG_LOG);

        setMessageId(messageId);
        setClientid(clientid);
        setTopic(topic);
        setQos(qos);
        setRetain(retain);
        setPayload(payload);
        setCreateTime(createTime);
    }
}
