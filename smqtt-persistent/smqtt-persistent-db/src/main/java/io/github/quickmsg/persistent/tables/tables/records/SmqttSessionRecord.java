/*
 * This file is generated by jOOQ.
 */
package io.github.quickmsg.persistent.tables.tables.records;


import io.github.quickmsg.persistent.tables.tables.SmqttSession;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmqttSessionRecord extends TableRecordImpl<SmqttSessionRecord> implements Record5<String, String, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>smqtt.smqtt_session.topic</code>. 话题
     */
    public void setTopic(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>smqtt.smqtt_session.topic</code>. 话题
     */
    public String getTopic() {
        return (String) get(0);
    }

    /**
     * Setter for <code>smqtt.smqtt_session.client_id</code>. 客户端ID
     */
    public void setClientId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>smqtt.smqtt_session.client_id</code>. 客户端ID
     */
    public String getClientId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>smqtt.smqtt_session.qos</code>. qos
     */
    public void setQos(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>smqtt.smqtt_session.qos</code>. qos
     */
    public Integer getQos() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>smqtt.smqtt_session.body</code>. 消息内容
     */
    public void setBody(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>smqtt.smqtt_session.body</code>. 消息内容
     */
    public String getBody() {
        return (String) get(3);
    }

    /**
     * Setter for <code>smqtt.smqtt_session.create_time</code>. 记录保存时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>smqtt.smqtt_session.create_time</code>. 记录保存时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, Integer, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, Integer, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SmqttSession.SMQTT_SESSION.TOPIC;
    }

    @Override
    public Field<String> field2() {
        return SmqttSession.SMQTT_SESSION.CLIENT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return SmqttSession.SMQTT_SESSION.QOS;
    }

    @Override
    public Field<String> field4() {
        return SmqttSession.SMQTT_SESSION.BODY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return SmqttSession.SMQTT_SESSION.CREATE_TIME;
    }

    @Override
    public String component1() {
        return getTopic();
    }

    @Override
    public String component2() {
        return getClientId();
    }

    @Override
    public Integer component3() {
        return getQos();
    }

    @Override
    public String component4() {
        return getBody();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public String value1() {
        return getTopic();
    }

    @Override
    public String value2() {
        return getClientId();
    }

    @Override
    public Integer value3() {
        return getQos();
    }

    @Override
    public String value4() {
        return getBody();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public SmqttSessionRecord value1(String value) {
        setTopic(value);
        return this;
    }

    @Override
    public SmqttSessionRecord value2(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public SmqttSessionRecord value3(Integer value) {
        setQos(value);
        return this;
    }

    @Override
    public SmqttSessionRecord value4(String value) {
        setBody(value);
        return this;
    }

    @Override
    public SmqttSessionRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public SmqttSessionRecord values(String value1, String value2, Integer value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SmqttSessionRecord
     */
    public SmqttSessionRecord() {
        super(SmqttSession.SMQTT_SESSION);
    }

    /**
     * Create a detached, initialised SmqttSessionRecord
     */
    public SmqttSessionRecord(String topic, String clientId, Integer qos, String body, LocalDateTime createTime) {
        super(SmqttSession.SMQTT_SESSION);

        setTopic(topic);
        setClientId(clientId);
        setQos(qos);
        setBody(body);
        setCreateTime(createTime);
    }
}
